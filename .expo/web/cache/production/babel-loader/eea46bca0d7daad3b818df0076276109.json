{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext}from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{MaterialIcons}from'@expo/vector-icons';import{AuthContext}from\"../context/AuthContext\";import{CurrencyContext}from\"../context/CurrencyContext\";var SignOut=function SignOut(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useContext=useContext(AuthContext),signOut=_useContext.actions.signOut;var _useContext2=useContext(CurrencyContext),resetCurrencyState=_useContext2.actions.resetCurrencyState;var signUserOut=function signUserOut(){return _regeneratorRuntime.async(function signUserOut$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.next=3;return _regeneratorRuntime.awrap(signOut());case 3:resetCurrencyState();case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);};{return isLoading?React.createElement(ActivityIndicator,{size:\"small\",color:\"white\",style:{margin:45}}):React.createElement(TouchableOpacity,{onPress:function onPress(){return signUserOut();}},React.createElement(MaterialIcons,{name:\"logout\",size:30,color:\"white\",style:{margin:40}}));}};export default SignOut;","map":{"version":3,"sources":["C:/Users/bosgi/Documents/Mobile Projects/cryptos/src/components/SignOut.js"],"names":["React","useState","useContext","MaterialIcons","AuthContext","CurrencyContext","SignOut","isLoading","setIsLoading","signOut","actions","resetCurrencyState","signUserOut","margin"],"mappings":"6HACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,C,4JAEA,OAASC,aAAT,KAA8B,oBAA9B,CACA,OAASC,WAAT,8BACA,OAASC,eAAT,kCAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eACcL,QAAQ,CAAC,KAAD,CADtB,wCACbM,SADa,eACFC,YADE,+BAEYN,UAAU,CAACE,WAAD,CAFtB,CAEDK,OAFC,aAEZC,OAFY,CAEDD,OAFC,kBAGuBP,UAAU,CAACG,eAAD,CAHjC,CAGDM,kBAHC,cAGZD,OAHY,CAGDC,kBAHC,CAKpB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,wHAClBJ,YAAY,CAAC,IAAD,CAAZ,CADkB,iDAEZC,OAAO,EAFK,SAGlBE,kBAAkB,GAHA,qEAApB,CAMA,CAAE,MAAOJ,CAAAA,SAAS,CAChB,oBAAC,iBAAD,EAAmB,IAAI,CAAC,OAAxB,CAAgC,KAAK,CAAC,OAAtC,CAA8C,KAAK,CAAE,CAAEM,MAAM,CAAE,EAAV,CAArD,EADgB,CAGhB,oBAAC,gBAAD,EACE,OAAO,CAAE,yBAAMD,CAAAA,WAAW,EAAjB,EADX,EAGE,oBAAC,aAAD,EAAe,IAAI,CAAC,QAApB,CAA6B,IAAI,CAAE,EAAnC,CAAuC,KAAK,CAAC,OAA7C,CAAqD,KAAK,CAAE,CAAEC,MAAM,CAAE,EAAV,CAA5D,EAHF,CAHA,CASD,CACF,CArBD,CAuBA,cAAeP,CAAAA,OAAf","sourcesContent":["\r\nimport React, { useState, useContext } from 'react';\r\nimport { TouchableOpacity, ActivityIndicator } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { CurrencyContext } from '../context/CurrencyContext';\r\n\r\nconst SignOut = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { actions: { signOut } }= useContext(AuthContext);\r\n  const { actions: { resetCurrencyState } }= useContext(CurrencyContext);\r\n\r\n  const signUserOut = async () => {\r\n    setIsLoading(true);\r\n    await signOut();\r\n    resetCurrencyState();\r\n  }\r\n\r\n  { return isLoading ? (\r\n    <ActivityIndicator size='small' color='white' style={{ margin: 45}}/>\r\n  ) : (\r\n    <TouchableOpacity \r\n      onPress={() => signUserOut()}\r\n      >\r\n      <MaterialIcons name='logout' size={30} color='white' style={{ margin: 40 }}/>\r\n    </TouchableOpacity>\r\n  )\r\n  }\r\n}\r\n\r\nexport default SignOut;"]},"metadata":{},"sourceType":"module"}