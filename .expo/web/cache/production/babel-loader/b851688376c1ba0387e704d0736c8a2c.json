{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Button from\"../Button\";var SubmitButton=function SubmitButton(_ref){var email=_ref.email,password=_ref.password,buttonText=_ref.buttonText,onSubmit=_ref.onSubmit;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var handleSubmit=function handleSubmit(email,password){return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.next=3;return _regeneratorRuntime.awrap(onSubmit(email.trim(),password.trim()));case 3:setIsLoading(false);case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);};return React.createElement(View,{style:styles.container},email===''||password===''?React.createElement(React.Fragment,null,React.createElement(Button,{title:buttonText,disable:true})):isLoading?React.createElement(React.Fragment,null,React.createElement(Button,{title:'',disable:true}),React.createElement(ActivityIndicator,{size:\"small\",color:\"black\",style:{marginTop:-35}})):React.createElement(Button,{title:buttonText,onPress:function onPress(){return handleSubmit(email,password);},disable:false}));};var styles=StyleSheet.create({container:{alignItems:'center',marginBottom:15}});export{SubmitButton};","map":{"version":3,"sources":["C:/Users/bosgi/Documents/Mobile Projects/cryptos/src/components/auth/SubmitButton.js"],"names":["React","useState","Button","SubmitButton","email","password","buttonText","onSubmit","isLoading","setIsLoading","handleSubmit","trim","styles","container","marginTop","StyleSheet","create","alignItems","marginBottom"],"mappings":"6HACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,qMAEA,MAAOC,CAAAA,MAAP,iBAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA+C,IAA5CC,CAAAA,KAA4C,MAA5CA,KAA4C,CAArCC,QAAqC,MAArCA,QAAqC,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAfC,QAAe,MAAfA,QAAe,eAChCN,QAAQ,CAAC,KAAD,CADwB,wCAC3DO,SAD2D,eAChDC,YADgD,eAIlE,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAON,KAAP,CAAcC,QAAd,wHACnBI,YAAY,CAAC,IAAD,CAAZ,CADmB,iDAEbF,QAAQ,CAACH,KAAK,CAACO,IAAN,EAAD,CAAeN,QAAQ,CAACM,IAAT,EAAf,CAFK,SAGnBF,YAAY,CAAC,KAAD,CAAZ,CAHmB,qEAArB,CAMA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEG,MAAM,CAACC,SAApB,EAGGT,KAAK,GAAK,EAAV,EAAgBC,QAAQ,GAAK,EAA9B,CACE,wCACE,oBAAC,MAAD,EAAQ,KAAK,CAAEC,UAAf,CAA2B,OAAO,CAAE,IAApC,EADF,CADF,CAMIE,SAAS,CACP,wCACE,oBAAC,MAAD,EAAQ,KAAK,CAAE,EAAf,CAAmB,OAAO,CAAE,IAA5B,EADF,CAEE,oBAAC,iBAAD,EAAmB,IAAI,CAAC,OAAxB,CAAgC,KAAK,CAAC,OAAtC,CAA8C,KAAK,CAAE,CAAEM,SAAS,CAAE,CAAC,EAAd,CAArD,EAFF,CADO,CAMP,oBAAC,MAAD,EAAQ,KAAK,CAAER,UAAf,CAA2B,OAAO,CAAE,yBAAMI,CAAAA,YAAY,CAACN,KAAD,CAAQC,QAAR,CAAlB,EAApC,CAAyE,OAAO,CAAE,KAAlF,EAfR,CADF,CAsBD,CAhCD,CAkCA,GAAMO,CAAAA,MAAM,CAAGG,UAAU,CAACC,MAAX,CAAkB,CAC/BH,SAAS,CAAE,CACTI,UAAU,CAAE,QADH,CAETC,YAAY,CAAE,EAFL,CADoB,CAAlB,CAAf,CAOA,OAASf,YAAT","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { View, StyleSheet, ActivityIndicator } from 'react-native';\r\nimport Button from '../Button';\r\n\r\nconst SubmitButton = ({ email, password, buttonText, onSubmit }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Helper function that executes on form submission\r\n  const handleSubmit = async (email, password) => {\r\n    setIsLoading(true);\r\n    await onSubmit(email.trim(), password.trim());\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      { \r\n      // Disable 'Add' button if crypto data is still being fetched or if nothing has been typed yet\r\n      (email === '' || password === '') ? (\r\n        <>\r\n          <Button title={buttonText} disable={true}/>\r\n        </>\r\n        ) : (\r\n          // Switch to loading spinner while handling submission\r\n          isLoading ? (\r\n            <>\r\n              <Button title={''} disable={true}/>\r\n              <ActivityIndicator size='small' color='black' style={{ marginTop: -35}}/>\r\n            </>\r\n          ) : (\r\n            <Button title={buttonText} onPress={() => handleSubmit(email, password)} disable={false}/>\r\n          )\r\n        )\r\n      }\r\n    </View>\r\n  )  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center', \r\n    marginBottom: 15\r\n  },\r\n})\r\n\r\nexport { SubmitButton };"]},"metadata":{},"sourceType":"module"}