{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import{AddButton,ErrorMessage,SearchInput}from\"../components/search\";import{CurrencyContext}from\"../context/CurrencyContext\";var AddScreen=function AddScreen(_ref){var navigation=_ref.navigation;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),errorMessage=_useState4[0],setErrorMessage=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),results=_useState6[0],setResults=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoading=_useState8[0],setIsLoading=_useState8[1];var _useContext=useContext(CurrencyContext),currencyState=_useContext.currencyState,addCurrency=_useContext.actions.addCurrency;var getResults=function getResults(){var response,json;return _regeneratorRuntime.async(function getResults$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.prev=1;_context.next=4;return _regeneratorRuntime.awrap(fetch(\"https://data.messari.io/api/v1/assets?fields=id,name,symbol,metrics/market_data/price_usd,metrics/market_data/percent_change_usd_last_24_hours\"));case 4:response=_context.sent;_context.next=7;return _regeneratorRuntime.awrap(response==null?void 0:response.json());case 7:json=_context.sent;setResults(json.data);setIsLoading(false);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 15:case\"end\":return _context.stop();}}},null,null,[[1,12]],Promise);};useEffect(function(){getResults();},[]);var filterByCurrency=function filterByCurrency(currencyTerm){return results.filter(function(result){return result.symbol===currencyTerm.trim()||result.name===currencyTerm.trim();});};var checkForDuplicate=function checkForDuplicate(testCurrency){return currencyState.list.filter(function(currency){return currency.name===testCurrency.name;});};var handleSearch=function handleSearch(searchTerm){if(searchTerm){var newCurrency=filterByCurrency(searchTerm);if(newCurrency.length===0){setErrorMessage('Please enter valid currency');}else{var duplicate=checkForDuplicate(newCurrency[0]);if(duplicate.length!==0){setErrorMessage('You are already tracking this currency');}else{addCurrency(newCurrency[0]);setErrorMessage('');navigation.navigate('Home');}}}else{setErrorMessage('Please enter valid currency');}};return React.createElement(View,{style:styles.container},React.createElement(Text,{style:styles.text},\"Add a Cryptocurrency\"),React.createElement(SearchInput,{text:text,onChangeText:function onChangeText(text){return setText(text);},placeholder:\"Use a name or ticker symbol...\"}),React.createElement(AddButton,{isLoading:isLoading,text:text,handleSearch:handleSearch}),React.createElement(ErrorMessage,{message:errorMessage}));};var styles=StyleSheet.create({container:{flex:1,justifyContent:'center',paddingHorizontal:25,backgroundColor:'white',paddingTop:50},text:{fontWeight:'bold',marginBottom:25,fontSize:24}});export{AddScreen};","map":{"version":3,"sources":["C:/Users/bosgi/Documents/Mobile Projects/cryptos/src/screens/AddScreen.js"],"names":["React","useState","useContext","useEffect","AddButton","ErrorMessage","SearchInput","CurrencyContext","AddScreen","navigation","text","setText","errorMessage","setErrorMessage","results","setResults","isLoading","setIsLoading","currencyState","addCurrency","actions","getResults","fetch","response","json","data","console","log","filterByCurrency","currencyTerm","filter","result","symbol","trim","name","checkForDuplicate","testCurrency","list","currency","handleSearch","searchTerm","newCurrency","length","duplicate","navigate","styles","container","StyleSheet","create","flex","justifyContent","paddingHorizontal","backgroundColor","paddingTop","fontWeight","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, StyleSheet, Text } from 'react-native';\r\nimport { AddButton, ErrorMessage, SearchInput } from '../components/search';\r\nimport { CurrencyContext } from '../context/CurrencyContext';\r\n\r\nconst AddScreen = ({ navigation }) => {\r\n  const [text, setText] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [results, setResults] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { currencyState, actions: { addCurrency } } = useContext(CurrencyContext);\r\n\r\n  // Fetch required cryptocurrency data from API \r\n  const getResults = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      let response = await fetch(\r\n        `https://data.messari.io/api/v1/assets?fields=id,name,symbol,metrics/market_data/price_usd,metrics/market_data/percent_change_usd_last_24_hours`\r\n        );\r\n      let json = await response?.json();\r\n      setResults(json.data);\r\n      setIsLoading(false);\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  // Execute on initial component render\r\n  useEffect(() => {\r\n    getResults();\r\n  }, [])\r\n\r\n  // Helper function to filter through results and return desired currency, based on 'currencyTerm'\r\n  const filterByCurrency = (currencyTerm) => {\r\n    return results.filter((result) => {\r\n      return (result.symbol === currencyTerm.trim() || result.name === currencyTerm.trim());\r\n    })\r\n  }\r\n\r\n  // Helper function to check if desired currency already exists in current list of tracked currencies\r\n    const checkForDuplicate = (testCurrency) => {\r\n      return currencyState.list.filter((currency) => {\r\n        return currency.name === testCurrency.name;\r\n      })\r\n    }\r\n\r\n  // Handles all functionality required after executing a search\r\n  const handleSearch = (searchTerm) => {\r\n    if (searchTerm) {\r\n      // Get searched currency from API data\r\n      const newCurrency = filterByCurrency(searchTerm);\r\n      if (newCurrency.length === 0) {\r\n        setErrorMessage('Please enter valid currency');\r\n      } else {\r\n        // Check if searched currency is already being tracked\r\n        const duplicate = checkForDuplicate(newCurrency[0]);\r\n        if (duplicate.length !== 0) {\r\n          setErrorMessage('You are already tracking this currency');\r\n        } else {\r\n          addCurrency(newCurrency[0]);\r\n          setErrorMessage('');\r\n          navigation.navigate('Home');\r\n        }\r\n      }  \r\n    } else {\r\n      setErrorMessage('Please enter valid currency');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <Text style={styles.text}>Add a Cryptocurrency</Text>\r\n\r\n      <SearchInput \r\n        text={text} \r\n        onChangeText={(text) => setText(text)}\r\n        placeholder='Use a name or ticker symbol...'\r\n      />\r\n\r\n      <AddButton \r\n        isLoading={isLoading} \r\n        text={text} \r\n        handleSearch={handleSearch}\r\n      />\r\n\r\n      <ErrorMessage message={errorMessage} />\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 25,\r\n    backgroundColor: 'white',\r\n    paddingTop: 50,\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 25,\r\n    fontSize: 24,\r\n  },\r\n})\r\n\r\nexport { AddScreen };"]},"metadata":{},"sourceType":"module"}