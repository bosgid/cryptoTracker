{"ast":null,"code":"import React,{useContext,useEffect}from'react';import{NavigationContainer}from'@react-navigation/native';import{createStackNavigator}from\"@react-navigation/stack\";import firebase from'firebase';import{LoadingScreen,SignInScreen,SignUpScreen,HomeScreen,AddScreen}from\"./src/screens\";import{CurrencyProvider,CurrencyContext}from\"./src/context/CurrencyContext\";import{DeleteProvider,DeleteContext}from\"./src/context/DeleteContext\";import{AuthProvider,AuthContext}from\"./src/context/AuthContext\";import Trash from\"./src/components/Trash\";import SignOut from\"./src/components/SignOut\";var Stack=createStackNavigator();var App=function App(){var _useContext=useContext(DeleteContext),deleteList=_useContext.deleteList;var _useContext2=useContext(AuthContext),authState=_useContext2.authState,setAuthState=_useContext2.actions.setAuthState;var _useContext3=useContext(CurrencyContext),fetchCryptos=_useContext3.actions.fetchCryptos;useEffect(function(){firebase.initializeApp({apiKey:\"AIzaSyCwHOBHEnw7AlxsoN1bbDnJ-PcPu4TyzT0\",authDomain:\"cryptocurrency-tracker-c9666.firebaseapp.com\",projectId:\"cryptocurrency-tracker-c9666\",storageBucket:\"cryptocurrency-tracker-c9666.appspot.com\",messagingSenderId:\"800062146682\",appId:\"1:800062146682:web:4e143f30d5b71792da53c3\",measurementId:\"G-QJ8088T2VR\"});firebase.auth().onAuthStateChanged(function(user){return user?setAuthState(true):setAuthState(false);});},[]);if(authState.isSignedIn===null){return React.createElement(LoadingScreen,null);}var HomeScreenRightIcon=function HomeScreenRightIcon(){return deleteList.length!==0?React.createElement(Trash,{deleteList:deleteList}):React.createElement(SignOut,null);};return React.createElement(NavigationContainer,null,React.createElement(Stack.Navigator,null,authState.isSignedIn===false?React.createElement(React.Fragment,null,React.createElement(Stack.Screen,{name:\"Sign in\",component:SignInScreen,options:{headerTransparent:true,headerTitle:''}}),React.createElement(Stack.Screen,{name:\"Sign up\",component:SignUpScreen,options:{headerTransparent:true,headerTitle:'',headerLeft:null}})):React.createElement(React.Fragment,null,React.createElement(Stack.Screen,{name:\"Home\",component:HomeScreen,options:{headerTitle:'CryptoTracker',headerTintColor:'white',headerRight:function headerRight(){return HomeScreenRightIcon();},headerStyle:{height:120,backgroundColor:'#385674'}}}),React.createElement(Stack.Screen,{name:\"Add\",component:AddScreen,options:{headerTransparent:true,headerTitle:'',headerBackTitleVisible:true}}))));};export default(function(){return React.createElement(CurrencyProvider,null,React.createElement(AuthProvider,null,React.createElement(DeleteProvider,null,React.createElement(App,null))));});","map":{"version":3,"sources":["C:/Users/bosgi/Documents/Mobile Projects/cryptos/App.js"],"names":["React","useContext","useEffect","NavigationContainer","createStackNavigator","firebase","LoadingScreen","SignInScreen","SignUpScreen","HomeScreen","AddScreen","CurrencyProvider","CurrencyContext","DeleteProvider","DeleteContext","AuthProvider","AuthContext","Trash","SignOut","Stack","App","deleteList","authState","setAuthState","actions","fetchCryptos","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","onAuthStateChanged","user","isSignedIn","HomeScreenRightIcon","length","headerTransparent","headerTitle","headerLeft","headerTintColor","headerRight","headerStyle","height","backgroundColor","headerBackTitleVisible"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport firebase from 'firebase';\nimport { LoadingScreen, SignInScreen, SignUpScreen, HomeScreen, AddScreen } from './src/screens';\nimport { CurrencyProvider, CurrencyContext } from \"./src/context/CurrencyContext\";\nimport { DeleteProvider, DeleteContext } from './src/context/DeleteContext';\nimport { AuthProvider, AuthContext } from './src/context/AuthContext';\nimport Trash from \"./src/components/Trash\";\nimport SignOut from \"./src/components/SignOut\";\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const { deleteList } = useContext(DeleteContext);\n  const { authState, actions: { setAuthState } } = useContext(AuthContext);\n  const { actions: { fetchCryptos } } = useContext(CurrencyContext);\n\n  // Fetch firebase data on initial render\n  useEffect(() => {\n    firebase.initializeApp({\n      apiKey: \"AIzaSyCwHOBHEnw7AlxsoN1bbDnJ-PcPu4TyzT0\",\n      authDomain: \"cryptocurrency-tracker-c9666.firebaseapp.com\",\n      projectId: \"cryptocurrency-tracker-c9666\",\n      storageBucket: \"cryptocurrency-tracker-c9666.appspot.com\",\n      messagingSenderId: \"800062146682\",\n      appId: \"1:800062146682:web:4e143f30d5b71792da53c3\",\n      measurementId: \"G-QJ8088T2VR\"\n    })\n\n    // Check if user is already signed in on app startup\n    firebase.auth().onAuthStateChanged((user) => {\n      return user ? setAuthState(true) : setAuthState(false)\n    })\n  }, [])\n\n  // Show loading screen while awaiting firebase data\n  if (authState.isSignedIn === null) {\n    return <LoadingScreen />;\n  }\n \n  const HomeScreenRightIcon = () => {\n    // Show 'delete button' if there are items selected for delete\n    return (deleteList.length !== 0) \n      ? <Trash deleteList={deleteList}/>\n      : <SignOut />\n  }\n\n  return (\n      <NavigationContainer>\n        <Stack.Navigator>\n          {authState.isSignedIn === false ? (\n            <>\n              <Stack.Screen \n                name='Sign in'\n                component={SignInScreen} \n                options={{ \n                  headerTransparent: true, \n                  headerTitle: '',\n                }}\n              />\n              <Stack.Screen \n                name='Sign up'\n                component={SignUpScreen} \n                options={{ \n                  headerTransparent: true, \n                  headerTitle: '', \n                  headerLeft: null  \n                }}\n              />\n            </>\n          ) : (\n            <>\n              <Stack.Screen \n                name='Home'\n                component={HomeScreen} \n                options={{ \n                  headerTitle: 'CryptoTracker',\n                  headerTintColor: 'white',\n                  headerRight: () => HomeScreenRightIcon(),\n                  headerStyle: {\n                    height: 120,\n                    backgroundColor: '#385674',\n                  } \n                }}\n              />\n              <Stack.Screen \n                name='Add'\n                component={AddScreen} \n                options={{ \n                  headerTransparent: true, \n                  headerTitle: '',\n                  headerBackTitleVisible: true,  \n                }}\n              />\n            </>\n          )}\n        </Stack.Navigator>\n      </NavigationContainer>\n  );\n}\n\nexport default () => {\n  return (\n    <CurrencyProvider>\n      <AuthProvider>\n        <DeleteProvider>\n          <App />\n        </DeleteProvider>\n      </AuthProvider>\n    </CurrencyProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}