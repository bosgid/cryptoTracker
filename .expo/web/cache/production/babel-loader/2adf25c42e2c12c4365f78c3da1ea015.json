{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import FlatList from\"react-native-web/dist/exports/FlatList\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import View from\"react-native-web/dist/exports/View\";import{LogBox}from\"react-native-web/dist/index\";import RefreshControl from\"react-native-web/dist/exports/RefreshControl\";import InfoCard from\"../components/info/InfoCard\";import LinkText from\"../components/LinkText\";import{CurrencyContext}from\"../context/CurrencyContext\";LogBox.ignoreLogs(['VirtualizedLists should never be nested inside plain ScrollViews with the same orientation - use another VirtualizedList-backed container instead.']);var HomeScreen=function HomeScreen(_ref){var navigation=_ref.navigation;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),refreshing=_useState2[0],setRefreshing=_useState2[1];var _useContext=useContext(CurrencyContext),currencyState=_useContext.currencyState,_useContext$actions=_useContext.actions,fetchCryptos=_useContext$actions.fetchCryptos,resetCurrencyState=_useContext$actions.resetCurrencyState;useEffect(function(){resetCurrencyState();var unsubscribe=fetchCryptos();return function(){unsubscribe();};},[refreshing]);useEffect(function(){navigation.addListener('focus',function(){refresh();});return function(){navigation.removeListener('focus');};},[]);var refresh=function refresh(){setRefreshing(!refreshing);};return React.createElement(ScrollView,{refreshControl:React.createElement(RefreshControl,{refreshing:false,onRefresh:refresh})},React.createElement(View,{style:{height:currencyState.list.length*100}},React.createElement(FlatList,{data:currencyState.list,keyExtractor:function keyExtractor(item){return item.id;},renderItem:function renderItem(_ref2){var item=_ref2.item;return React.createElement(InfoCard,{currency:item});}})),React.createElement(LinkText,{text:\"+ Add a Cryptocurrency\",onPress:function onPress(){return navigation.navigate('Add');},textSize:16,isLoading:!currencyState.isFetched}));};export{HomeScreen};","map":{"version":3,"sources":["C:/Users/bosgi/Documents/Mobile Projects/cryptos/src/screens/HomeScreen.js"],"names":["React","useState","useContext","useEffect","LogBox","InfoCard","LinkText","CurrencyContext","ignoreLogs","HomeScreen","navigation","refreshing","setRefreshing","currencyState","actions","fetchCryptos","resetCurrencyState","unsubscribe","addListener","refresh","removeListener","height","list","length","item","id","navigate","isFetched"],"mappings":"iEACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,C,0LACqCC,M,4GACrC,MAAOC,CAAAA,QAAP,mCACA,MAAOC,CAAAA,QAAP,8BACA,OAASC,eAAT,kCAGAH,MAAM,CAACI,UAAP,CAAkB,CAAC,oJAAD,CAAlB,EAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,eACDT,QAAQ,CAAC,KAAD,CADP,wCAC9BU,UAD8B,eAClBC,aADkB,+BAEoCV,UAAU,CAACK,eAAD,CAF9C,CAE7BM,aAF6B,aAE7BA,aAF6B,iCAEdC,OAFc,CAEHC,YAFG,qBAEHA,YAFG,CAEWC,kBAFX,qBAEWA,kBAFX,CAIrCb,SAAS,CAAC,UAAM,CACda,kBAAkB,GAClB,GAAMC,CAAAA,WAAW,CAAGF,YAAY,EAAhC,CAEA,MAAO,WAAM,CACXE,WAAW,GACZ,CAFD,CAGD,CAPQ,CAON,CAACN,UAAD,CAPM,CAAT,CASAR,SAAS,CAAC,UAAM,CACdO,UAAU,CAACQ,WAAX,CAAuB,OAAvB,CAAgC,UAAM,CACpCC,OAAO,GACR,CAFD,EAIA,MAAO,WAAM,CACXT,UAAU,CAACU,cAAX,CAA0B,OAA1B,EACD,CAFD,CAGD,CARQ,CAQN,EARM,CAAT,CAUA,GAAMD,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBP,aAAa,CAAC,CAACD,UAAF,CAAb,CACD,CAFD,CAIA,MACE,qBAAC,UAAD,EACE,cAAc,CACZ,oBAAC,cAAD,EAAgB,UAAU,CAAE,KAA5B,CAAmC,SAAS,CAAEQ,OAA9C,EAFJ,EAKE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEE,MAAM,CAAER,aAAa,CAACS,IAAd,CAAmBC,MAAnB,CAA0B,GAApC,CAAb,EACE,oBAAC,QAAD,EACE,IAAI,CAAEV,aAAa,CAACS,IADtB,CAEE,YAAY,CAAE,sBAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAT,EAFpB,CAGE,UAAU,CAAE,0BAAc,IAAXD,CAAAA,IAAW,OAAXA,IAAW,CACxB,MACE,qBAAC,QAAD,EAAU,QAAQ,CAAEA,IAApB,EADF,CAGD,CAPH,EADF,CALF,CAiBE,oBAAC,QAAD,EACE,IAAI,CAAC,wBADP,CAEE,OAAO,CAAE,yBAAMd,CAAAA,UAAU,CAACgB,QAAX,CAAoB,KAApB,CAAN,EAFX,CAGE,QAAQ,CAAE,EAHZ,CAIE,SAAS,CAAE,CAACb,aAAa,CAACc,SAJ5B,EAjBF,CADF,CA0BD,CArDD,CAuDA,OAASlB,UAAT","sourcesContent":["\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { FlatList, ScrollView, View, LogBox, RefreshControl } from 'react-native';\r\nimport InfoCard from '../components/info/InfoCard';\r\nimport LinkText from '../components/LinkText';\r\nimport { CurrencyContext } from '../context/CurrencyContext';\r\n\r\n// Ignore warning \r\nLogBox.ignoreLogs(['VirtualizedLists should never be nested inside plain ScrollViews with the same orientation - use another VirtualizedList-backed container instead.']);\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const { currencyState, actions: { fetchCryptos, resetCurrencyState } } = useContext(CurrencyContext);\r\n  \r\n  useEffect(() => {\r\n    resetCurrencyState();\r\n    const unsubscribe = fetchCryptos();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  }, [refreshing])\r\n\r\n  useEffect(() => {\r\n    navigation.addListener('focus', () => {\r\n      refresh();\r\n    })\r\n\r\n    return () => {\r\n      navigation.removeListener('focus');\r\n    };\r\n  }, [])\r\n\r\n  const refresh = () => {\r\n    setRefreshing(!refreshing);\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      refreshControl={\r\n        <RefreshControl refreshing={false} onRefresh={refresh} />\r\n      }\r\n    >\r\n      <View style={{ height: currencyState.list.length*100 }}>\r\n        <FlatList\r\n          data={currencyState.list}\r\n          keyExtractor={item => item.id}\r\n          renderItem={({ item }) => {\r\n            return (\r\n              <InfoCard currency={item}/>\r\n            )\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <LinkText \r\n        text='+ Add a Cryptocurrency' \r\n        onPress={() => navigation.navigate('Add')} \r\n        textSize={16}\r\n        isLoading={!currencyState.isFetched}\r\n      />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nexport { HomeScreen };"]},"metadata":{},"sourceType":"module"}