{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useReducer}from'react';import{LogBox}from\"react-native-web/dist/index\";import firebase from'firebase';import'intl';import'intl/locale-data/jsonp/en';LogBox.ignoreLogs(['Setting a timer']);var CurrencyContext=React.createContext();var Reducer=function Reducer(currencyState,action){switch(action.type){case'add_currency':return _objectSpread(_objectSpread({},currencyState),{},{list:[].concat(_toConsumableArray(currencyState.list),[action.payload])});case'delete_currency':return _objectSpread(_objectSpread({},currencyState),{},{list:currencyState.list.filter(function(currency){return currency.name!==action.payload.name;})});case'reset_currency_state':return{list:[],isFetched:false};case'set_fetched_state':return _objectSpread(_objectSpread({},currencyState),{},{isFetched:action.payload});default:return currencyState;}};var CurrencyProvider=function CurrencyProvider(_ref){var children=_ref.children;var _useReducer=useReducer(Reducer,{list:[],isFetched:false}),_useReducer2=_slicedToArray(_useReducer,2),currencyState=_useReducer2[0],dispatch=_useReducer2[1];var fetchCryptos=function fetchCryptos(){var _firebase$auth=firebase.auth(),currentUser=_firebase$auth.currentUser;var cryptosRef=firebase.firestore().collection('users').doc(currentUser.uid).collection('cryptos');return cryptosRef.onSnapshot(function(snapshot){var changes=snapshot.docChanges();changes.forEach(function(change){if(change.type=='added'){dispatch({type:'add_currency',payload:change.doc.data()});}else if(change.type=='removed'){dispatch({type:'delete_currency',payload:change.doc.data()});}});dispatch({type:'set_fetched_state',payload:true});},function(err){console.log(err);});};var addCurrency=function addCurrency(currency){var _firebase$auth2=firebase.auth(),currentUser=_firebase$auth2.currentUser;var cryptosRef=firebase.firestore().collection('users').doc(currentUser.uid).collection('cryptos');var usd_formatted=new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(currency.metrics.market_data.price_usd.toFixed(2));cryptosRef.doc(currency.name).set({id:currency.id,name:currency.name,symbol:currency.symbol,usd_value:usd_formatted,change_24hr:currency.metrics.market_data.percent_change_usd_last_24_hours.toFixed(2),icon_link:\"https://cryptologos.cc/logos/\"+currency.name.toLowerCase()+\"-\"+currency.symbol.toLowerCase()+\"-logo.png?v=009\"});};var deleteCurrency=function deleteCurrency(deleteList){var _firebase$auth3=firebase.auth(),currentUser=_firebase$auth3.currentUser;var cryptosRef=firebase.firestore().collection('users').doc(currentUser.uid).collection('cryptos');deleteList.forEach(function(currency){cryptosRef.doc(currency.name).delete();});};var resetCurrencyState=function resetCurrencyState(){dispatch({type:'reset_currency_state'});};return React.createElement(CurrencyContext.Provider,{value:{currencyState:currencyState,actions:{fetchCryptos:fetchCryptos,addCurrency:addCurrency,deleteCurrency:deleteCurrency,resetCurrencyState:resetCurrencyState}}},children);};export{CurrencyContext,CurrencyProvider};","map":{"version":3,"sources":["C:/Users/bosgi/Documents/Mobile Projects/cryptos/src/context/CurrencyContext.js"],"names":["React","useReducer","LogBox","firebase","ignoreLogs","CurrencyContext","createContext","Reducer","currencyState","action","type","list","payload","filter","currency","name","isFetched","CurrencyProvider","children","dispatch","fetchCryptos","auth","currentUser","cryptosRef","firestore","collection","doc","uid","onSnapshot","snapshot","changes","docChanges","forEach","change","data","err","console","log","addCurrency","usd_formatted","Intl","NumberFormat","style","format","metrics","market_data","price_usd","toFixed","set","id","symbol","usd_value","change_24hr","percent_change_usd_last_24_hours","icon_link","toLowerCase","deleteCurrency","deleteList","delete","resetCurrencyState","actions"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { LogBox } from 'react-native';\r\nimport firebase from 'firebase';\r\nimport 'intl';\r\nimport 'intl/locale-data/jsonp/en';\r\n\r\nLogBox.ignoreLogs([ 'Setting a timer' ]);\r\n\r\nconst CurrencyContext = React.createContext();\r\n\r\nconst Reducer = (currencyState, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'add_currency':\r\n      return { ...currencyState, list: [...currencyState.list, action.payload]};\r\n\r\n    case 'delete_currency':\r\n      return { \r\n        ...currencyState, \r\n        list: currencyState.list.filter((currency) => currency.name !== action.payload.name )\r\n      };\r\n\r\n    case 'reset_currency_state':\r\n      return { list: [], isFetched: false };\r\n\r\n    case 'set_fetched_state':\r\n      return { ...currencyState, isFetched: action.payload };\r\n\r\n    default:\r\n      return currencyState;\r\n  }\r\n}\r\n\r\nconst CurrencyProvider = ({ children }) => {\r\n  const [currencyState, dispatch] = useReducer(Reducer, { list: [], isFetched: false })\r\n\r\n  const fetchCryptos = () => {\r\n    const { currentUser } = firebase.auth();\r\n    const cryptosRef = firebase.firestore().collection('users').doc(currentUser.uid).collection('cryptos');\r\n\r\n    return (\r\n      cryptosRef.onSnapshot((snapshot) => {\r\n        let changes = snapshot.docChanges();\r\n\r\n        changes.forEach(change => {\r\n          if(change.type == 'added') {\r\n            dispatch({ type: 'add_currency', payload: change.doc.data() });\r\n          } else if (change.type == 'removed') {\r\n            dispatch({ type: 'delete_currency', payload: change.doc.data() })\r\n          }\r\n        })\r\n\r\n        dispatch({ type: 'set_fetched_state', payload: true })\r\n      }, function(err) {\r\n        console.log(err)\r\n      })\r\n    )\r\n  }\r\n\r\n  const addCurrency = (currency) => {\r\n    const { currentUser } = firebase.auth();\r\n    const cryptosRef = firebase.firestore().collection('users').doc(currentUser.uid).collection('cryptos');\r\n    const usd_formatted = new Intl.NumberFormat(\r\n    'en-US', \r\n    { style: 'currency', currency: 'USD' })\r\n    .format(currency.metrics.market_data.price_usd.toFixed(2));\r\n\r\n    cryptosRef.doc(currency.name).set({\r\n      id: currency.id,\r\n      name: currency.name,\r\n      symbol: currency.symbol,\r\n      usd_value: usd_formatted,\r\n      change_24hr: currency.metrics.market_data.percent_change_usd_last_24_hours.toFixed(2),\r\n      icon_link:`https://cryptologos.cc/logos/${currency.name.toLowerCase()}-${currency.symbol.toLowerCase()}-logo.png?v=009`\r\n    });\r\n  }\r\n\r\n  const deleteCurrency = (deleteList) => {\r\n    const { currentUser } = firebase.auth();\r\n    const cryptosRef = firebase.firestore().collection('users').doc(currentUser.uid).collection('cryptos');\r\n\r\n    deleteList.forEach((currency) => {\r\n     cryptosRef.doc(currency.name).delete();\r\n    })\r\n  }\r\n\r\n  const resetCurrencyState = () => {\r\n    dispatch({ type: 'reset_currency_state' });\r\n  }\r\n\r\n  return (\r\n    <CurrencyContext.Provider value={{ currencyState, \r\n    actions: { fetchCryptos, addCurrency, deleteCurrency, resetCurrencyState } }\r\n    }>\r\n      {children}\r\n    </CurrencyContext.Provider>\r\n  )\r\n}\r\n\r\nexport { CurrencyContext, CurrencyProvider };"]},"metadata":{},"sourceType":"module"}